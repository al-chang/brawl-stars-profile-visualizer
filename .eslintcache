[{"/Users/alexanderchang/Desktop/brawl-stars-app/client/src/index.js":"1","/Users/alexanderchang/Desktop/brawl-stars-app/client/src/Components/App.jsx":"2","/Users/alexanderchang/Desktop/brawl-stars-app/client/src/Components/Home.jsx":"3","/Users/alexanderchang/Desktop/brawl-stars-app/client/src/Components/SearchBar.jsx":"4","/Users/alexanderchang/Desktop/brawl-stars-app/client/src/Components/Header.jsx":"5","/Users/alexanderchang/Desktop/brawl-stars-app/client/src/Components/Profile.jsx":"6","/Users/alexanderchang/Desktop/brawl-stars-app/client/src/Components/NotFound.jsx":"7","/Users/alexanderchang/Desktop/brawl-stars-app/client/src/Components/Player.jsx":"8","/Users/alexanderchang/Desktop/brawl-stars-app/client/src/Components/PlayerCard.jsx":"9","/Users/alexanderchang/Desktop/brawl-stars-app/client/src/Components/Graphs.jsx":"10","/Users/alexanderchang/Desktop/brawl-stars-app/client/src/Components/Battlelog.jsx":"11","/Users/alexanderchang/Desktop/brawl-stars-app/client/src/nameToImage.js":"12","/Users/alexanderchang/Desktop/brawl-stars-app/client/src/Components/GraphLayout.jsx":"13"},{"size":209,"mtime":1616117134983,"results":"14","hashOfConfig":"15"},{"size":721,"mtime":1616163529616,"results":"16","hashOfConfig":"15"},{"size":264,"mtime":1611622449261,"results":"17","hashOfConfig":"15"},{"size":1432,"mtime":1616163547528,"results":"18","hashOfConfig":"15"},{"size":319,"mtime":1611807109339,"results":"19","hashOfConfig":"15"},{"size":1044,"mtime":1616197016067,"results":"20","hashOfConfig":"15"},{"size":202,"mtime":1616032030679,"results":"21","hashOfConfig":"15"},{"size":782,"mtime":1616198002091,"results":"22","hashOfConfig":"15"},{"size":2838,"mtime":1616192662828,"results":"23","hashOfConfig":"15"},{"size":5625,"mtime":1616167049982,"results":"24","hashOfConfig":"15"},{"size":2775,"mtime":1616197994799,"results":"25","hashOfConfig":"15"},{"size":1167,"mtime":1616196377798,"results":"26","hashOfConfig":"15"},{"size":957,"mtime":1616197998900,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"69yxy5",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"30"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"30"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"30"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"30"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/alexanderchang/Desktop/brawl-stars-app/client/src/index.js",[],["59","60"],"/Users/alexanderchang/Desktop/brawl-stars-app/client/src/Components/App.jsx",[],"/Users/alexanderchang/Desktop/brawl-stars-app/client/src/Components/Home.jsx",[],"/Users/alexanderchang/Desktop/brawl-stars-app/client/src/Components/SearchBar.jsx",[],"/Users/alexanderchang/Desktop/brawl-stars-app/client/src/Components/Header.jsx",[],"/Users/alexanderchang/Desktop/brawl-stars-app/client/src/Components/Profile.jsx",["61","62"],"import React, { useState, useEffect } from \"react\";\nimport Player from \"./Player\";\nimport axios from \"axios\";\nimport { Redirect } from \"react-router-dom\";\nimport TestData from \"../test-data.json\";\nimport _ from \"lodash\";\n\nfunction Profile({ match }) {\n  const [playerModel, setPlayerModel] = useState(null);\n  const [redirect404, setRedirect404] = useState(false);\n\n  // Retrieve player data from the server and set model to player data\n  // Redirect to 404 if player data is not found\n  const loadNewUser = (inputText) => {\n    axios\n      .get(\"/playerData/\" + inputText)\n      .then((response) => setPlayerModel(response.data))\n      .catch(() => setRedirect404(true));\n  };\n\n  useEffect(() => {\n    let id = _.replace(_.toUpper(match.params.playerID), \" \", \"\");\n    loadNewUser(id);\n\n    //setPlayerModel(new PlayerModel(TestData));\n  }, []);\n\n  return (\n    <div>\n      {playerModel != null ? <Player player={playerModel} /> : <h1>Loading</h1>}\n      {redirect404 && <Redirect push to=\"/404\" />}\n    </div>\n  );\n}\n\nexport default Profile;\n","/Users/alexanderchang/Desktop/brawl-stars-app/client/src/Components/NotFound.jsx",["63"],"import React, { useState } from \"react\";\n\nfunction NotFound() {\n  return (\n    <div>\n      <h3>404 Page Not Found</h3>\n      <a href=\"/\">Return to search</a>\n    </div>\n  );\n}\n\nexport default NotFound;\n","/Users/alexanderchang/Desktop/brawl-stars-app/client/src/Components/Player.jsx",[],"/Users/alexanderchang/Desktop/brawl-stars-app/client/src/Components/PlayerCard.jsx",["64","65"],"import { Grid } from \"@material-ui/core\";\nimport React from \"react\";\n\nfunction PlayerStats(props) {\n  const labelStyle = {\n    fontSize: \".75rem\",\n    lineHeight: \"0\",\n    color: \"grey\",\n  };\n  const itemStyle = {\n    fontSize: \"1.25rem\",\n    lineHeight: \"0\",\n  };\n  const gridStyle = {\n    //border: \"2px black solid\",\n    marginBottom: \"5px\",\n  };\n\n  return (\n    <Grid\n      style={{ textAlign: \"center\" }}\n      item\n      container\n      xs={12}\n      md={2}\n      direction=\"column\"\n    >\n      <Grid item style={gridStyle}>\n        <span style={labelStyle}>{props.label1}</span> <br />\n        <span style={itemStyle}>{props.item1}</span>\n      </Grid>\n      <Grid item style={gridStyle}>\n        <span style={labelStyle}>{props.label2}</span> <br />\n        <span style={itemStyle}>{props.item2}</span>\n      </Grid>\n      <Grid item style={gridStyle}>\n        <span style={labelStyle}>{props.label3}</span> <br />\n        <span style={itemStyle}>{props.item3}</span>\n      </Grid>\n    </Grid>\n  );\n}\n\nfunction PlayerCard(props) {\n  console.log(props.player);\n\n  return (\n    <Grid style={{ backgroundColor: \"white\" }} container spacing={1}>\n      <Grid item xs={12} md={2}>\n        <img\n          src={`/images/profile/${props.player.icon.id}.png`}\n          style={{\n            textAlign: \"center\",\n            width: \"50%\",\n            margin: \"auto\",\n            display: \"block\",\n            paddingTop: \"20%\",\n            paddingBottom: \"20%\"\n          }}\n        />\n      </Grid>\n      <Grid\n        item\n        container\n        xs={12}\n        md={4}\n        direction=\"column\"\n        style={{ fontSize: \"1.4em\", paddingTop: \"3%\" }}\n      >\n        <Grid item>{props.player.name}</Grid>\n        <Grid item>{props.player.club.name}</Grid>\n        <Grid item>\n          <img\n            src=\"/images/trophy.jpeg\"\n            style={{ width: \"5%\", paddingRight: \"2%\" }}\n          ></img>\n          {props.player.trophies}\n        </Grid>\n      </Grid>\n      <PlayerStats\n        label1={\"Highest Trophies\"}\n        item1={props.player.highestTrophies}\n        label2={\"Experience Level\"}\n        item2={props.player.expLevel}\n        label3={\"Experience Points\"}\n        item3={props.player.expPoints}\n      />\n      <PlayerStats\n        label1={\"3v3 Victories\"}\n        item1={props.player[\"3vs3Victories\"]}\n        label2={\"Solo Victories\"}\n        item2={props.player.soloVictories}\n        label3={\"Duo Victories\"}\n        item3={props.player.duoVictories}\n      />\n      <PlayerStats\n        label1={\"Big Brawler Time\"}\n        item1={props.player.bestTimeAsBigBrawler}\n        label2={\"Robo Rumble Time\"}\n        item2={props.player.bestRoboRumbleTime}\n        label3={\"Times Star Player\"}\n        item3={props.player.starPlayerCount}\n      />\n    </Grid>\n  );\n}\n\nexport default PlayerCard;\nexport { PlayerStats };\n","/Users/alexanderchang/Desktop/brawl-stars-app/client/src/Components/Graphs.jsx",["66","67","68","69","70"],"import React, { useEffect, useState } from \"react\";\nimport { Bar, Line, Pie, Polar } from \"react-chartjs-2\";\nimport _ from \"lodash\";\n\nconst colors = [\n  \"rgb(28, 164, 255, 0.5)\", //red\n  \"rgb(255, 28, 70, 0.5)\", //blue\n  \"rgb(56, 255, 89, 0.5)\", //green\n  \"rgb(248, 255, 56, 0.5)\", //yellow\n  \"rgb(255, 92, 250, 0.5)\", //Pink\n  \"rgb(255, 156, 56, 0.5)\", // Orange\n  \"rgb(175, 46, 255, 0.5)\", // Purple\n  \"rgb(46, 255, 238, 0.5)\", // Cyan\n  \"rgb(28, 164, 255, 0.5)\", \n  \"rgb(255, 28, 70, 0.5)\", \n  \"rgb(56, 255, 89, 0.5)\", \n  \"rgb(248, 255, 56, 0.5)\", \n  \"rgb(255, 92, 250, 0.5)\", \n  \"rgb(255, 156, 56, 0.5)\", \n  \"rgb(175, 46, 255, 0.5)\", \n  \"rgb(46, 255, 238, 0.5)\", \n  \"rgb(28, 164, 255, 0.5)\", \n  \"rgb(255, 28, 70, 0.5)\", \n  \"rgb(56, 255, 89, 0.5)\", \n  \"rgb(248, 255, 56, 0.5)\", \n  \"rgb(255, 92, 250, 0.5)\", \n  \"rgb(255, 156, 56, 0.5)\", \n  \"rgb(175, 46, 255, 0.5)\", \n  \"rgb(46, 255, 238, 0.5)\", \n  \"rgb(28, 164, 255, 0.5)\", \n  \"rgb(255, 28, 70, 0.5)\", \n  \"rgb(56, 255, 89, 0.5)\", \n  \"rgb(248, 255, 56, 0.5)\", \n  \"rgb(255, 92, 250, 0.5)\", \n  \"rgb(255, 156, 56, 0.5)\", \n  \"rgb(175, 46, 255, 0.5)\", \n  \"rgb(46, 255, 238, 0.5)\", \n  \"rgb(28, 164, 255, 0.5)\", \n  \"rgb(255, 28, 70, 0.5)\", \n  \"rgb(56, 255, 89, 0.5)\", \n  \"rgb(248, 255, 56, 0.5)\", \n  \"rgb(255, 92, 250, 0.5)\", \n  \"rgb(255, 156, 56, 0.5)\", \n  \"rgb(175, 46, 255, 0.5)\", \n  \"rgb(46, 255, 238, 0.5)\", \n  \"rgb(28, 164, 255, 0.5)\", \n  \"rgb(255, 28, 70, 0.5)\", \n  \"rgb(56, 255, 89, 0.5)\", \n  \"rgb(248, 255, 56, 0.5)\", \n  \"rgb(255, 92, 250, 0.5)\", \n  \"rgb(255, 156, 56, 0.5)\", \n  \"rgb(175, 46, 255, 0.5)\", \n  \"rgb(46, 255, 238, 0.5)\", \n];\n\n// Visualize the recent wins and loses in a pie chart\nconst WinLose = (props) => {\n  const [chartData, setChartData] = useState({});\n\n  const chart = () => {\n    setChartData({\n      responsive: true,\n      labels: [\"Wins\", \"Losses\"],\n      datasets: [\n        {\n          label: \"Win/Lose\",\n          data: props.winLose,\n          backgroundColor: colors,\n        },\n      ],\n    });\n  };\n\n  useEffect(() => {\n    chart();\n  }, []);\n\n  return (\n    <div style={{ backgroundColor: \"white\", borderRadius: \"25px\" }}>\n      <Pie data={chartData} />\n    </div>\n  );\n};\n\n// Visualize the recently played gamemodes in a Polar graph\nconst GameModes = (props) => {\n  const [chartData, setChartData] = useState({});\n\n  const chart = () => {\n    // Add the labels to labels array and numbers to numbers array\n    let labels = [];\n    let numberMode = [];\n    for (let property in props.gameModes) {\n      if (!props.gameModes.hasOwnProperty(property)) {\n        continue;\n      }\n      // Use lodash to change from camel case to regular text\n      labels.push(_.startCase(property));\n      numberMode.push(props.gameModes[property]);\n    }\n    setChartData({\n      responsive: true,\n      labels: labels,\n      datasets: [\n        {\n          label: \"Recent Game Modes\",\n          data: numberMode,\n          backgroundColor: colors,\n        },\n      ],\n    });\n  };\n\n  useEffect(() => {\n    chart();\n  }, []);\n\n  return (\n    <div style={{ backgroundColor: \"white\", borderRadius: \"25px\" }}>\n      <Polar data={chartData} />\n    </div>\n  );\n};\n\n// Polar graph of recently played brawlers\nconst RecentBrawlers = (props) => {\n  const [chartData, setChartData] = useState({});\n\n  const chart = () => {\n    // Add the labels to labels array and numbers to numbers array\n    let labels = [];\n    let numberBrawler = [];\n    for (let property in props.recentBrawlers) {\n      if (!props.recentBrawlers.hasOwnProperty(property)) {\n        continue;\n      }\n      // Use lodash to change from camel case to regular text\n      labels.push(_.startCase(property));\n      numberBrawler.push(props.recentBrawlers[property]);\n    }\n    setChartData({\n      responsive: true,\n      labels: labels,\n      datasets: [\n        {\n          label: \"Recent Brawlers\",\n          data: numberBrawler,\n          backgroundColor: colors,\n        },\n      ],\n    });\n  };\n\n  useEffect(() => {\n    chart();\n  }, []);\n\n  return (\n    <div style={{ backgroundColor: \"white\", borderRadius: \"25px\" }}>\n      <Polar data={chartData} />\n    </div>\n  );\n};\n\n//Visualize trophies by brawler\nconst BrawlerTrophies = (props) => {\n  const [chartData, setChartData] = useState({});\n\n  const chart = () => {\n    let half = Math.ceil(props.brawlerData.length / 2);\n    let labels = props.brawlerData.splice(0, half);\n    let datas = props.brawlerData.splice(-half);\n    setChartData({\n      responsive: true,\n      labels: labels,\n      datasets: [\n        {\n          label: \"Trophies By Brawler\",\n          data: datas,\n          backgroundColor: colors,\n        },\n      ],\n    });\n  };\n\n  useEffect(() => {\n    chart();\n  }, []);\n\n  return (\n    <div style={{ backgroundColor: \"white\", borderRadius: \"25px\" }}>\n      <Bar data={chartData} />\n    </div>\n  );\n};\n\n// Graph of the player trophies over time \nconst TrophiesOverTime = (props) => {\n  const [chartData, setChartData] = useState({});\n\n  let words = [];\n\n  for (let i = 0; i < props.trophiesOverTime.length; i++) {\n    words.push(\"\");\n  }\n\n  const chart = () => {\n    setChartData({\n      responsive: true,\n      labels: words,\n      datasets: [\n        {\n          label: \"Trophies Over Past \" + props.trophiesOverTime.length + \" Games\",\n          data: props.trophiesOverTime,\n          backgroundColor: 'rgba(75,192,192,0.4)',\n        },\n      ],\n    });\n  };\n\n  useEffect(() => {\n    chart();\n  }, []);\n\n  return (\n    <div style={{ backgroundColor: \"white\", borderRadius: \"25px\" }}>\n      <Line data={chartData} />\n    </div>\n  );\n}\n\nexport { WinLose, GameModes, RecentBrawlers, BrawlerTrophies, TrophiesOverTime };\n","/Users/alexanderchang/Desktop/brawl-stars-app/client/src/Components/Battlelog.jsx",["71"],"/Users/alexanderchang/Desktop/brawl-stars-app/client/src/nameToImage.js",[],"/Users/alexanderchang/Desktop/brawl-stars-app/client/src/Components/GraphLayout.jsx",[],{"ruleId":"72","replacedBy":"73"},{"ruleId":"74","replacedBy":"75"},{"ruleId":"76","severity":1,"message":"77","line":5,"column":8,"nodeType":"78","messageId":"79","endLine":5,"endColumn":16},{"ruleId":"80","severity":1,"message":"81","line":26,"column":6,"nodeType":"82","endLine":26,"endColumn":8,"suggestions":"83"},{"ruleId":"76","severity":1,"message":"84","line":1,"column":17,"nodeType":"78","messageId":"79","endLine":1,"endColumn":25},{"ruleId":"85","severity":1,"message":"86","line":50,"column":9,"nodeType":"87","endLine":60,"endColumn":11},{"ruleId":"85","severity":1,"message":"86","line":73,"column":11,"nodeType":"87","endLine":76,"endColumn":12},{"ruleId":"80","severity":1,"message":"88","line":76,"column":6,"nodeType":"82","endLine":76,"endColumn":8,"suggestions":"89"},{"ruleId":"80","severity":1,"message":"88","line":116,"column":6,"nodeType":"82","endLine":116,"endColumn":8,"suggestions":"90"},{"ruleId":"80","severity":1,"message":"88","line":156,"column":6,"nodeType":"82","endLine":156,"endColumn":8,"suggestions":"91"},{"ruleId":"80","severity":1,"message":"88","line":188,"column":6,"nodeType":"82","endLine":188,"endColumn":8,"suggestions":"92"},{"ruleId":"80","severity":1,"message":"88","line":223,"column":6,"nodeType":"82","endLine":223,"endColumn":8,"suggestions":"93"},{"ruleId":"85","severity":1,"message":"86","line":30,"column":11,"nodeType":"87","endLine":33,"endColumn":12},"no-native-reassign",["94"],"no-negated-in-lhs",["95"],"no-unused-vars","'TestData' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'match.params.playerID'. Either include it or remove the dependency array.","ArrayExpression",["96"],"'useState' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","React Hook useEffect has a missing dependency: 'chart'. Either include it or remove the dependency array.",["97"],["98"],["99"],["100"],["101"],"no-global-assign","no-unsafe-negation",{"desc":"102","fix":"103"},{"desc":"104","fix":"105"},{"desc":"104","fix":"106"},{"desc":"104","fix":"107"},{"desc":"104","fix":"108"},{"desc":"104","fix":"109"},"Update the dependencies array to be: [match.params.playerID]",{"range":"110","text":"111"},"Update the dependencies array to be: [chart]",{"range":"112","text":"113"},{"range":"114","text":"113"},{"range":"115","text":"113"},{"range":"116","text":"113"},{"range":"117","text":"113"},[842,844],"[match.params.playerID]",[2022,2024],"[chart]",[2989,2991],[3968,3970],[4671,4673],[5406,5408]]