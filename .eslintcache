[{"/Users/alexanderchang/Desktop/brawl-stars-app/client/src/index.js":"1","/Users/alexanderchang/Desktop/brawl-stars-app/client/src/Components/App.jsx":"2","/Users/alexanderchang/Desktop/brawl-stars-app/client/src/Components/Home.jsx":"3","/Users/alexanderchang/Desktop/brawl-stars-app/client/src/Components/SearchBar.jsx":"4","/Users/alexanderchang/Desktop/brawl-stars-app/client/src/Components/Header.jsx":"5","/Users/alexanderchang/Desktop/brawl-stars-app/client/src/Components/Profile.jsx":"6","/Users/alexanderchang/Desktop/brawl-stars-app/client/src/Components/NotFound.jsx":"7","/Users/alexanderchang/Desktop/brawl-stars-app/client/src/Components/Player.jsx":"8","/Users/alexanderchang/Desktop/brawl-stars-app/client/src/Components/PlayerCard.jsx":"9","/Users/alexanderchang/Desktop/brawl-stars-app/client/src/Components/Graphs.jsx":"10","/Users/alexanderchang/Desktop/brawl-stars-app/client/src/Components/PlayerStats.jsx":"11"},{"size":209,"mtime":1616117134983,"results":"12","hashOfConfig":"13"},{"size":549,"mtime":1616117381038,"results":"14","hashOfConfig":"13"},{"size":264,"mtime":1611622449261,"results":"15","hashOfConfig":"13"},{"size":1432,"mtime":1616035561298,"results":"16","hashOfConfig":"13"},{"size":319,"mtime":1611807109339,"results":"17","hashOfConfig":"13"},{"size":1079,"mtime":1616116073928,"results":"18","hashOfConfig":"13"},{"size":202,"mtime":1616032030679,"results":"19","hashOfConfig":"13"},{"size":1097,"mtime":1616034874094,"results":"20","hashOfConfig":"13"},{"size":1729,"mtime":1616126734919,"results":"21","hashOfConfig":"13"},{"size":4475,"mtime":1612473309262,"results":"22","hashOfConfig":"13"},{"size":954,"mtime":1616126885761,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"69yxy5",{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"30"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"30"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/alexanderchang/Desktop/brawl-stars-app/client/src/index.js",[],"/Users/alexanderchang/Desktop/brawl-stars-app/client/src/Components/App.jsx",[],"/Users/alexanderchang/Desktop/brawl-stars-app/client/src/Components/Home.jsx",[],["49","50"],"/Users/alexanderchang/Desktop/brawl-stars-app/client/src/Components/SearchBar.jsx",[],"/Users/alexanderchang/Desktop/brawl-stars-app/client/src/Components/Header.jsx",[],"/Users/alexanderchang/Desktop/brawl-stars-app/client/src/Components/Profile.jsx",["51","52"],"/Users/alexanderchang/Desktop/brawl-stars-app/client/src/Components/NotFound.jsx",["53"],"import React, { useState } from \"react\";\n\nfunction NotFound() {\n  return (\n    <div>\n      <h3>404 Page Not Found</h3>\n      <a href=\"/\">Return to search</a>\n    </div>\n  );\n}\n\nexport default NotFound;\n","/Users/alexanderchang/Desktop/brawl-stars-app/client/src/Components/Player.jsx",[],"/Users/alexanderchang/Desktop/brawl-stars-app/client/src/Components/PlayerCard.jsx",["54","55"],"/Users/alexanderchang/Desktop/brawl-stars-app/client/src/Components/Graphs.jsx",["56","57","58","59","60"],"import React, { useEffect, useState } from \"react\";\nimport { Bar, Line, Pie, Polar } from \"react-chartjs-2\";\nimport _ from \"lodash\";\n\nconst colors = [\n  \"rgb(28, 164, 255, 0.5)\", //red\n  \"rgb(255, 28, 70, 0.5)\", //blue\n  \"rgb(56, 255, 89, 0.5)\", //green\n  \"rgb(248, 255, 56, 0.5)\", //yellow\n  \"rgb(255, 92, 250, 0.5)\", //Pink\n  \"rgb(255, 156, 56, 0.5)\", // Orange\n  \"rgb(175, 46, 255, 0.5)\", // Purple\n  \"rgb(46, 255, 238, 0.5)\", // Cyan\n];\n\n// Visualize the recent wins and loses in a pie chart\nconst WinLose = (props) => {\n  const [chartData, setChartData] = useState({});\n\n  const chart = () => {\n    setChartData({\n      responsive: true,\n      labels: [\"Wins\", \"Losses\"],\n      datasets: [\n        {\n          label: \"Win/Lose\",\n          data: props.winLose,\n          backgroundColor: colors,\n        },\n      ],\n    });\n  };\n\n  useEffect(() => {\n    chart();\n  }, []);\n\n  return (\n    <div style={{ backgroundColor: \"white\", borderRadius: \"25px\" }}>\n      <Pie data={chartData} />\n    </div>\n  );\n};\n\n// Visualize the recently played gamemodes in a Polar graph\nconst GameModes = (props) => {\n  const [chartData, setChartData] = useState({});\n\n  const chart = () => {\n    // Add the labels to labels array and numbers to numbers array\n    let labels = [];\n    let numberMode = [];\n    for (let property in props.gameModes) {\n      if (!props.gameModes.hasOwnProperty(property)) {\n        continue;\n      }\n      // Use lodash to change from camel case to regular text\n      labels.push(_.startCase(property));\n      numberMode.push(props.gameModes[property]);\n    }\n    setChartData({\n      responsive: true,\n      labels: labels,\n      datasets: [\n        {\n          label: \"Recent Game Modes\",\n          data: numberMode,\n          backgroundColor: colors,\n        },\n      ],\n    });\n  };\n\n  useEffect(() => {\n    chart();\n  }, []);\n\n  return (\n    <div style={{ backgroundColor: \"white\", borderRadius: \"25px\" }}>\n      <Polar data={chartData} />\n    </div>\n  );\n};\n\n// Polar graph of recently played brawlers\nconst RecentBrawlers = (props) => {\n  const [chartData, setChartData] = useState({});\n\n  const chart = () => {\n    // Add the labels to labels array and numbers to numbers array\n    let labels = [];\n    let numberBrawler = [];\n    for (let property in props.recentBrawlers) {\n      if (!props.recentBrawlers.hasOwnProperty(property)) {\n        continue;\n      }\n      // Use lodash to change from camel case to regular text\n      labels.push(_.startCase(property));\n      numberBrawler.push(props.recentBrawlers[property]);\n    }\n    setChartData({\n      responsive: true,\n      labels: labels,\n      datasets: [\n        {\n          label: \"Recent Brawlers\",\n          data: numberBrawler,\n          backgroundColor: colors,\n        },\n      ],\n    });\n  };\n\n  useEffect(() => {\n    chart();\n  }, []);\n\n  return (\n    <div style={{ backgroundColor: \"white\", borderRadius: \"25px\" }}>\n      <Polar data={chartData} />\n    </div>\n  );\n};\n\n//Visualize trophies by brawler\nconst BrawlerTrophies = (props) => {\n  const [chartData, setChartData] = useState({});\n\n  const chart = () => {\n    let half = Math.ceil(props.brawlerData.length / 2);\n    let labels = props.brawlerData.splice(0, half);\n    let datas = props.brawlerData.splice(-half);\n    setChartData({\n      responsive: true,\n      labels: labels,\n      datasets: [\n        {\n          label: \"Trophies By Brawler\",\n          data: datas,\n          backgroundColor: colors,\n        },\n      ],\n    });\n  };\n\n  useEffect(() => {\n    chart();\n  }, []);\n\n  return (\n    <div style={{ backgroundColor: \"white\", borderRadius: \"25px\" }}>\n      <Bar data={chartData} />\n    </div>\n  );\n};\n\n// Graph of the player trophies over time \nconst TrophiesOverTime = (props) => {\n  const [chartData, setChartData] = useState({});\n\n  let words = [];\n\n  for (let i = 0; i < props.trophiesOverTime.length; i++) {\n    words.push(\"\");\n  }\n\n  const chart = () => {\n    setChartData({\n      responsive: true,\n      labels: words,\n      datasets: [\n        {\n          label: \"Trophies Over Past \" + props.trophiesOverTime.length + \" Games\",\n          data: props.trophiesOverTime,\n          backgroundColor: 'rgba(75,192,192,0.4)',\n        },\n      ],\n    });\n  };\n\n  useEffect(() => {\n    chart();\n  }, []);\n\n  return (\n    <div style={{ backgroundColor: \"white\", borderRadius: \"25px\" }}>\n      <Line data={chartData} />\n    </div>\n  );\n}\n\nexport { WinLose, GameModes, RecentBrawlers, BrawlerTrophies, TrophiesOverTime };\n","/Users/alexanderchang/Desktop/brawl-stars-app/client/src/Components/PlayerStats.jsx",[],{"ruleId":"61","replacedBy":"62"},{"ruleId":"63","replacedBy":"64"},{"ruleId":"65","severity":1,"message":"66","line":5,"column":8,"nodeType":"67","messageId":"68","endLine":5,"endColumn":16},{"ruleId":"69","severity":1,"message":"70","line":26,"column":6,"nodeType":"71","endLine":26,"endColumn":8,"suggestions":"72"},{"ruleId":"65","severity":1,"message":"73","line":1,"column":17,"nodeType":"67","messageId":"68","endLine":1,"endColumn":25},{"ruleId":"74","severity":1,"message":"75","line":11,"column":11,"nodeType":"76","endLine":13,"endColumn":113},{"ruleId":"74","severity":1,"message":"75","line":18,"column":22,"nodeType":"76","endLine":18,"endColumn":93},{"ruleId":"69","severity":1,"message":"77","line":36,"column":6,"nodeType":"71","endLine":36,"endColumn":8,"suggestions":"78"},{"ruleId":"69","severity":1,"message":"77","line":76,"column":6,"nodeType":"71","endLine":76,"endColumn":8,"suggestions":"79"},{"ruleId":"69","severity":1,"message":"77","line":116,"column":6,"nodeType":"71","endLine":116,"endColumn":8,"suggestions":"80"},{"ruleId":"69","severity":1,"message":"77","line":148,"column":6,"nodeType":"71","endLine":148,"endColumn":8,"suggestions":"81"},{"ruleId":"69","severity":1,"message":"77","line":183,"column":6,"nodeType":"71","endLine":183,"endColumn":8,"suggestions":"82"},"no-native-reassign",["83"],"no-negated-in-lhs",["84"],"no-unused-vars","'TestData' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'match.params.playerID'. Either include it or remove the dependency array.","ArrayExpression",["85"],"'useState' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","React Hook useEffect has a missing dependency: 'chart'. Either include it or remove the dependency array.",["86"],["87"],["88"],["89"],["90"],"no-global-assign","no-unsafe-negation",{"desc":"91","fix":"92"},{"desc":"93","fix":"94"},{"desc":"93","fix":"95"},{"desc":"93","fix":"96"},{"desc":"93","fix":"97"},{"desc":"93","fix":"98"},"Update the dependencies array to be: [match.params.playerID]",{"range":"99","text":"100"},"Update the dependencies array to be: [chart]",{"range":"101","text":"102"},{"range":"103","text":"102"},{"range":"104","text":"102"},{"range":"105","text":"102"},{"range":"106","text":"102"},[841,843],"[match.params.playerID]",[872,874],"[chart]",[1839,1841],[2818,2820],[3521,3523],[4256,4258]]