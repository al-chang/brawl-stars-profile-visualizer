[{"/Users/alexanderchang/Desktop/brawl-stars-app/client/src/index.js":"1","/Users/alexanderchang/Desktop/brawl-stars-app/client/src/Components/App.jsx":"2","/Users/alexanderchang/Desktop/brawl-stars-app/client/src/Components/Home.jsx":"3","/Users/alexanderchang/Desktop/brawl-stars-app/client/src/Components/SearchBar.jsx":"4","/Users/alexanderchang/Desktop/brawl-stars-app/client/src/Components/Header.jsx":"5","/Users/alexanderchang/Desktop/brawl-stars-app/client/src/Model/PlayerModel.js":"6","/Users/alexanderchang/Desktop/brawl-stars-app/client/src/Components/Chart.jsx":"7","/Users/alexanderchang/Desktop/brawl-stars-app/client/src/Components/Profile.jsx":"8","/Users/alexanderchang/Desktop/brawl-stars-app/client/src/Components/NotFound.jsx":"9","/Users/alexanderchang/Desktop/brawl-stars-app/client/src/Components/Player.jsx":"10","/Users/alexanderchang/Desktop/brawl-stars-app/client/src/Components/PlayerCard.jsx":"11","/Users/alexanderchang/Desktop/brawl-stars-app/client/src/Components/Graphs.jsx":"12"},{"size":209,"mtime":1611004383640,"results":"13","hashOfConfig":"14"},{"size":549,"mtime":1611353126223,"results":"15","hashOfConfig":"14"},{"size":264,"mtime":1611622449261,"results":"16","hashOfConfig":"14"},{"size":1432,"mtime":1611622427762,"results":"17","hashOfConfig":"14"},{"size":319,"mtime":1611807109339,"results":"18","hashOfConfig":"14"},{"size":3829,"mtime":1615311706305,"results":"19","hashOfConfig":"14"},{"size":628,"mtime":1611189622861,"results":"20","hashOfConfig":"14"},{"size":1073,"mtime":1611805527881,"results":"21","hashOfConfig":"14"},{"size":202,"mtime":1616032030679,"results":"22","hashOfConfig":"14"},{"size":1165,"mtime":1615653544840,"results":"23","hashOfConfig":"14"},{"size":937,"mtime":1616033051585,"results":"24","hashOfConfig":"14"},{"size":4475,"mtime":1612473309262,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"69yxy5",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"42"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"28"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"52","messages":"53","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"28"},"/Users/alexanderchang/Desktop/brawl-stars-app/client/src/index.js",[],["55","56"],"/Users/alexanderchang/Desktop/brawl-stars-app/client/src/Components/App.jsx",[],"/Users/alexanderchang/Desktop/brawl-stars-app/client/src/Components/Home.jsx",[],"/Users/alexanderchang/Desktop/brawl-stars-app/client/src/Components/SearchBar.jsx",[],"/Users/alexanderchang/Desktop/brawl-stars-app/client/src/Components/Header.jsx",[],"/Users/alexanderchang/Desktop/brawl-stars-app/client/src/Model/PlayerModel.js",[],"/Users/alexanderchang/Desktop/brawl-stars-app/client/src/Components/Chart.jsx",["57"],"import React, { useEffect, useState } from \"react\";\nimport { Bar, Line } from \"react-chartjs-2\";\n\nfunction Chart() {\n  const [chartData, setChartData] = useState({});\n\n  const chart = () => {\n    setChartData({\n      labels: [\"monday\", \"tuesday\", \"wednesday\", \"thursday\", \"friday\"],\n      datasets: [\n        {\n          label: \"level\",\n          data: [32, 45, 12, 56, 69],\n          backgroundColor: [\"rgb(75, 192, 192, 0.6)\"],\n          borderWidth: 4,\n        },\n      ],\n    });\n  };\n\n  useEffect(() => {\n      chart()\n  }, [])\n\n  return (\n    <div>\n      <Line data={chartData} />\n    </div>\n  );\n}\n\nexport default Chart;\n",["58","59"],"/Users/alexanderchang/Desktop/brawl-stars-app/client/src/Components/Profile.jsx",["60","61"],"import React, { useState, useEffect } from \"react\";\nimport PlayerModel from \"../Model/PlayerModel\";\nimport Player from \"./Player\";\nimport axios from \"axios\";\nimport { Redirect } from \"react-router-dom\";\nimport TestData from \"../test-data.json\";\n\nfunction Profile({ match }) {\n  const [playerModel, setPlayerModel] = useState(null);\n  const [redirect404, setRedirect404] = useState(false);\n\n  // Retrieve player data from the server and set model to player data\n  // Redirect to 404 if player data is not found\n  const loadNewUser = (inputText) => {\n    axios\n      .get(\"/playerData/\" + inputText)\n      .then((response) => setPlayerModel(new PlayerModel(response.data)))\n      .catch(() => setRedirect404(true));\n  };\n\n  useEffect(() => {\n    loadNewUser(match.params.playerID);\n\n    //setPlayerModel(new PlayerModel(TestData));\n  }, []);\n\n  return (\n    <div>\n      {playerModel != null ? (\n        <Player player={playerModel} />\n      ) : (\n        <h1>Loading</h1>\n      )}\n      {redirect404 && <Redirect push to=\"/404\" />}\n    </div>\n  );\n}\n\nexport default Profile;\n","/Users/alexanderchang/Desktop/brawl-stars-app/client/src/Components/NotFound.jsx",["62"],"/Users/alexanderchang/Desktop/brawl-stars-app/client/src/Components/Player.jsx",[],"/Users/alexanderchang/Desktop/brawl-stars-app/client/src/Components/PlayerCard.jsx",["63"],"/Users/alexanderchang/Desktop/brawl-stars-app/client/src/Components/Graphs.jsx",["64","65","66","67","68"],"import React, { useEffect, useState } from \"react\";\nimport { Bar, Line, Pie, Polar } from \"react-chartjs-2\";\nimport _ from \"lodash\";\n\nconst colors = [\n  \"rgb(28, 164, 255, 0.5)\", //red\n  \"rgb(255, 28, 70, 0.5)\", //blue\n  \"rgb(56, 255, 89, 0.5)\", //green\n  \"rgb(248, 255, 56, 0.5)\", //yellow\n  \"rgb(255, 92, 250, 0.5)\", //Pink\n  \"rgb(255, 156, 56, 0.5)\", // Orange\n  \"rgb(175, 46, 255, 0.5)\", // Purple\n  \"rgb(46, 255, 238, 0.5)\", // Cyan\n];\n\n// Visualize the recent wins and loses in a pie chart\nconst WinLose = (props) => {\n  const [chartData, setChartData] = useState({});\n\n  const chart = () => {\n    setChartData({\n      responsive: true,\n      labels: [\"Wins\", \"Losses\"],\n      datasets: [\n        {\n          label: \"Win/Lose\",\n          data: props.winLose,\n          backgroundColor: colors,\n        },\n      ],\n    });\n  };\n\n  useEffect(() => {\n    chart();\n  }, []);\n\n  return (\n    <div style={{ backgroundColor: \"white\", borderRadius: \"25px\" }}>\n      <Pie data={chartData} />\n    </div>\n  );\n};\n\n// Visualize the recently played gamemodes in a Polar graph\nconst GameModes = (props) => {\n  const [chartData, setChartData] = useState({});\n\n  const chart = () => {\n    // Add the labels to labels array and numbers to numbers array\n    let labels = [];\n    let numberMode = [];\n    for (let property in props.gameModes) {\n      if (!props.gameModes.hasOwnProperty(property)) {\n        continue;\n      }\n      // Use lodash to change from camel case to regular text\n      labels.push(_.startCase(property));\n      numberMode.push(props.gameModes[property]);\n    }\n    setChartData({\n      responsive: true,\n      labels: labels,\n      datasets: [\n        {\n          label: \"Recent Game Modes\",\n          data: numberMode,\n          backgroundColor: colors,\n        },\n      ],\n    });\n  };\n\n  useEffect(() => {\n    chart();\n  }, []);\n\n  return (\n    <div style={{ backgroundColor: \"white\", borderRadius: \"25px\" }}>\n      <Polar data={chartData} />\n    </div>\n  );\n};\n\n// Polar graph of recently played brawlers\nconst RecentBrawlers = (props) => {\n  const [chartData, setChartData] = useState({});\n\n  const chart = () => {\n    // Add the labels to labels array and numbers to numbers array\n    let labels = [];\n    let numberBrawler = [];\n    for (let property in props.recentBrawlers) {\n      if (!props.recentBrawlers.hasOwnProperty(property)) {\n        continue;\n      }\n      // Use lodash to change from camel case to regular text\n      labels.push(_.startCase(property));\n      numberBrawler.push(props.recentBrawlers[property]);\n    }\n    setChartData({\n      responsive: true,\n      labels: labels,\n      datasets: [\n        {\n          label: \"Recent Brawlers\",\n          data: numberBrawler,\n          backgroundColor: colors,\n        },\n      ],\n    });\n  };\n\n  useEffect(() => {\n    chart();\n  }, []);\n\n  return (\n    <div style={{ backgroundColor: \"white\", borderRadius: \"25px\" }}>\n      <Polar data={chartData} />\n    </div>\n  );\n};\n\n//Visualize trophies by brawler\nconst BrawlerTrophies = (props) => {\n  const [chartData, setChartData] = useState({});\n\n  const chart = () => {\n    let half = Math.ceil(props.brawlerData.length / 2);\n    let labels = props.brawlerData.splice(0, half);\n    let datas = props.brawlerData.splice(-half);\n    setChartData({\n      responsive: true,\n      labels: labels,\n      datasets: [\n        {\n          label: \"Trophies By Brawler\",\n          data: datas,\n          backgroundColor: colors,\n        },\n      ],\n    });\n  };\n\n  useEffect(() => {\n    chart();\n  }, []);\n\n  return (\n    <div style={{ backgroundColor: \"white\", borderRadius: \"25px\" }}>\n      <Bar data={chartData} />\n    </div>\n  );\n};\n\n// Graph of the player trophies over time \nconst TrophiesOverTime = (props) => {\n  const [chartData, setChartData] = useState({});\n\n  let words = [];\n\n  for (let i = 0; i < props.trophiesOverTime.length; i++) {\n    words.push(\"\");\n  }\n\n  const chart = () => {\n    setChartData({\n      responsive: true,\n      labels: words,\n      datasets: [\n        {\n          label: \"Trophies Over Past \" + props.trophiesOverTime.length + \" Games\",\n          data: props.trophiesOverTime,\n          backgroundColor: 'rgba(75,192,192,0.4)',\n        },\n      ],\n    });\n  };\n\n  useEffect(() => {\n    chart();\n  }, []);\n\n  return (\n    <div style={{ backgroundColor: \"white\", borderRadius: \"25px\" }}>\n      <Line data={chartData} />\n    </div>\n  );\n}\n\nexport { WinLose, GameModes, RecentBrawlers, BrawlerTrophies, TrophiesOverTime };\n",{"ruleId":"69","replacedBy":"70"},{"ruleId":"71","replacedBy":"72"},{"ruleId":"73","severity":1,"message":"74","line":2,"column":10,"nodeType":"75","messageId":"76","endLine":2,"endColumn":13},{"ruleId":"69","replacedBy":"77"},{"ruleId":"71","replacedBy":"78"},{"ruleId":"73","severity":1,"message":"79","line":6,"column":8,"nodeType":"75","messageId":"76","endLine":6,"endColumn":16},{"ruleId":"80","severity":1,"message":"81","line":25,"column":6,"nodeType":"82","endLine":25,"endColumn":8,"suggestions":"83"},{"ruleId":"73","severity":1,"message":"84","line":1,"column":17,"nodeType":"75","messageId":"76","endLine":1,"endColumn":25},{"ruleId":"85","severity":1,"message":"86","line":11,"column":11,"nodeType":"87","endLine":14,"endColumn":13},{"ruleId":"80","severity":1,"message":"88","line":36,"column":6,"nodeType":"82","endLine":36,"endColumn":8,"suggestions":"89"},{"ruleId":"80","severity":1,"message":"88","line":76,"column":6,"nodeType":"82","endLine":76,"endColumn":8,"suggestions":"90"},{"ruleId":"80","severity":1,"message":"88","line":116,"column":6,"nodeType":"82","endLine":116,"endColumn":8,"suggestions":"91"},{"ruleId":"80","severity":1,"message":"88","line":148,"column":6,"nodeType":"82","endLine":148,"endColumn":8,"suggestions":"92"},{"ruleId":"80","severity":1,"message":"88","line":183,"column":6,"nodeType":"82","endLine":183,"endColumn":8,"suggestions":"93"},"no-native-reassign",["94"],"no-negated-in-lhs",["95"],"no-unused-vars","'Bar' is defined but never used.","Identifier","unusedVar",["94"],["95"],"'TestData' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'match.params.playerID'. Either include it or remove the dependency array.","ArrayExpression",["96"],"'useState' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","React Hook useEffect has a missing dependency: 'chart'. Either include it or remove the dependency array.",["97"],["98"],["99"],["100"],["101"],"no-global-assign","no-unsafe-negation",{"desc":"102","fix":"103"},{"desc":"104","fix":"105"},{"desc":"104","fix":"106"},{"desc":"104","fix":"107"},{"desc":"104","fix":"108"},{"desc":"104","fix":"109"},"Update the dependencies array to be: [match.params.playerID]",{"range":"110","text":"111"},"Update the dependencies array to be: [chart]",{"range":"112","text":"113"},{"range":"114","text":"113"},{"range":"115","text":"113"},{"range":"116","text":"113"},{"range":"117","text":"113"},[835,837],"[match.params.playerID]",[872,874],"[chart]",[1839,1841],[2818,2820],[3521,3523],[4256,4258]]